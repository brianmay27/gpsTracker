/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://code.google.com/p/google-apis-client-generator/
 * (build: 2013-10-23 18:35:03 UTC)
 * on 2013-10-28 at 09:45:51 UTC 
 * Modify at your own risk.
 */

package edu.vt.bmac.gpstracker.friendendpoint;

/**
 * Service definition for Friendendpoint (v1).
 *
 * <p>
 * This is an API
 * </p>
 *
 * <p>
 * For more information about this service, see the
 * <a href="" target="_blank">API Documentation</a>
 * </p>
 *
 * <p>
 * This service uses {@link FriendendpointRequestInitializer} to initialize global parameters via its
 * {@link Builder}.
 * </p>
 *
 * @since 1.3
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public class Friendendpoint extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient {

  // Note: Leave this static initializer at the top of the file.
  static {
    com.google.api.client.util.Preconditions.checkState(
        com.google.api.client.googleapis.GoogleUtils.MAJOR_VERSION == 1 &&
        com.google.api.client.googleapis.GoogleUtils.MINOR_VERSION >= 15,
        "You are currently running with version %s of google-api-client. " +
        "You need at least version 1.15 of google-api-client to run version " +
        "1.16.0-rc of the friendendpoint library.", com.google.api.client.googleapis.GoogleUtils.VERSION);
  }

  /**
   * The default encoded root URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_ROOT_URL = "https://gpstracker-bmac.appspot.com/_ah/api/";

  /**
   * The default encoded service path of the service. This is determined when the library is
   * generated and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_SERVICE_PATH = "friendendpoint/v1/";

  /**
   * The default encoded base URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   */
  public static final String DEFAULT_BASE_URL = DEFAULT_ROOT_URL + DEFAULT_SERVICE_PATH;

  /**
   * Constructor.
   *
   * <p>
   * Use {@link Builder} if you need to specify any of the optional parameters.
   * </p>
   *
   * @param transport HTTP transport, which should normally be:
   *        <ul>
   *        <li>Google App Engine:
   *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
   *        <li>Android: {@code newCompatibleTransport} from
   *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
   *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
   *        </li>
   *        </ul>
   * @param jsonFactory JSON factory, which may be:
   *        <ul>
   *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
   *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
   *        <li>Android Honeycomb or higher:
   *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
   *        </ul>
   * @param httpRequestInitializer HTTP request initializer or {@code null} for none
   * @since 1.7
   */
  public Friendendpoint(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
      com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
    this(new Builder(transport, jsonFactory, httpRequestInitializer));
  }

  /**
   * @param builder builder
   */
  Friendendpoint(Builder builder) {
    super(builder);
  }

  @Override
  protected void initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest<?> httpClientRequest) throws java.io.IOException {
    super.initialize(httpClientRequest);
  }

  /**
   * Create a request for the method "getFriend".
   *
   * This request holds the parameters needed by the the friendendpoint server.  After setting any
   * optional parameters, call the {@link GetFriend#execute()} method to invoke the remote operation.
   *
   * @param id
   * @return the request
   */
  public GetFriend getFriend(java.lang.String id) throws java.io.IOException {
    GetFriend result = new GetFriend(id);
    initialize(result);
    return result;
  }

  public class GetFriend extends FriendendpointRequest<edu.vt.bmac.gpstracker.friendendpoint.model.Friend> {

    private static final String REST_PATH = "friend/{id}";

    /**
     * Create a request for the method "getFriend".
     *
     * This request holds the parameters needed by the the friendendpoint server.  After setting any
     * optional parameters, call the {@link GetFriend#execute()} method to invoke the remote
     * operation. <p> {@link
     * GetFriend#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param id
     * @since 1.13
     */
    protected GetFriend(java.lang.String id) {
      super(Friendendpoint.this, "GET", REST_PATH, null, edu.vt.bmac.gpstracker.friendendpoint.model.Friend.class);
      this.id = com.google.api.client.util.Preconditions.checkNotNull(id, "Required parameter id must be specified.");
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public GetFriend setAlt(java.lang.String alt) {
      return (GetFriend) super.setAlt(alt);
    }

    @Override
    public GetFriend setFields(java.lang.String fields) {
      return (GetFriend) super.setFields(fields);
    }

    @Override
    public GetFriend setKey(java.lang.String key) {
      return (GetFriend) super.setKey(key);
    }

    @Override
    public GetFriend setOauthToken(java.lang.String oauthToken) {
      return (GetFriend) super.setOauthToken(oauthToken);
    }

    @Override
    public GetFriend setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (GetFriend) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public GetFriend setQuotaUser(java.lang.String quotaUser) {
      return (GetFriend) super.setQuotaUser(quotaUser);
    }

    @Override
    public GetFriend setUserIp(java.lang.String userIp) {
      return (GetFriend) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.String id;

    /**

     */
    public java.lang.String getId() {
      return id;
    }

    public GetFriend setId(java.lang.String id) {
      this.id = id;
      return this;
    }

    @Override
    public GetFriend set(String parameterName, Object value) {
      return (GetFriend) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "insertFriend".
   *
   * This request holds the parameters needed by the the friendendpoint server.  After setting any
   * optional parameters, call the {@link InsertFriend#execute()} method to invoke the remote
   * operation.
   *
   * @param content the {@link edu.vt.bmac.gpstracker.friendendpoint.model.Friend}
   * @return the request
   */
  public InsertFriend insertFriend(edu.vt.bmac.gpstracker.friendendpoint.model.Friend content) throws java.io.IOException {
    InsertFriend result = new InsertFriend(content);
    initialize(result);
    return result;
  }

  public class InsertFriend extends FriendendpointRequest<edu.vt.bmac.gpstracker.friendendpoint.model.Friend> {

    private static final String REST_PATH = "friend";

    /**
     * Create a request for the method "insertFriend".
     *
     * This request holds the parameters needed by the the friendendpoint server.  After setting any
     * optional parameters, call the {@link InsertFriend#execute()} method to invoke the remote
     * operation. <p> {@link
     * InsertFriend#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param content the {@link edu.vt.bmac.gpstracker.friendendpoint.model.Friend}
     * @since 1.13
     */
    protected InsertFriend(edu.vt.bmac.gpstracker.friendendpoint.model.Friend content) {
      super(Friendendpoint.this, "POST", REST_PATH, content, edu.vt.bmac.gpstracker.friendendpoint.model.Friend.class);
    }

    @Override
    public InsertFriend setAlt(java.lang.String alt) {
      return (InsertFriend) super.setAlt(alt);
    }

    @Override
    public InsertFriend setFields(java.lang.String fields) {
      return (InsertFriend) super.setFields(fields);
    }

    @Override
    public InsertFriend setKey(java.lang.String key) {
      return (InsertFriend) super.setKey(key);
    }

    @Override
    public InsertFriend setOauthToken(java.lang.String oauthToken) {
      return (InsertFriend) super.setOauthToken(oauthToken);
    }

    @Override
    public InsertFriend setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (InsertFriend) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public InsertFriend setQuotaUser(java.lang.String quotaUser) {
      return (InsertFriend) super.setQuotaUser(quotaUser);
    }

    @Override
    public InsertFriend setUserIp(java.lang.String userIp) {
      return (InsertFriend) super.setUserIp(userIp);
    }

    @Override
    public InsertFriend set(String parameterName, Object value) {
      return (InsertFriend) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "listFriend".
   *
   * This request holds the parameters needed by the the friendendpoint server.  After setting any
   * optional parameters, call the {@link ListFriend#execute()} method to invoke the remote operation.
   *
   * @return the request
   */
  public ListFriend listFriend() throws java.io.IOException {
    ListFriend result = new ListFriend();
    initialize(result);
    return result;
  }

  public class ListFriend extends FriendendpointRequest<edu.vt.bmac.gpstracker.friendendpoint.model.CollectionResponseFriend> {

    private static final String REST_PATH = "friend";

    /**
     * Create a request for the method "listFriend".
     *
     * This request holds the parameters needed by the the friendendpoint server.  After setting any
     * optional parameters, call the {@link ListFriend#execute()} method to invoke the remote
     * operation. <p> {@link
     * ListFriend#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @since 1.13
     */
    protected ListFriend() {
      super(Friendendpoint.this, "GET", REST_PATH, null, edu.vt.bmac.gpstracker.friendendpoint.model.CollectionResponseFriend.class);
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public ListFriend setAlt(java.lang.String alt) {
      return (ListFriend) super.setAlt(alt);
    }

    @Override
    public ListFriend setFields(java.lang.String fields) {
      return (ListFriend) super.setFields(fields);
    }

    @Override
    public ListFriend setKey(java.lang.String key) {
      return (ListFriend) super.setKey(key);
    }

    @Override
    public ListFriend setOauthToken(java.lang.String oauthToken) {
      return (ListFriend) super.setOauthToken(oauthToken);
    }

    @Override
    public ListFriend setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (ListFriend) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public ListFriend setQuotaUser(java.lang.String quotaUser) {
      return (ListFriend) super.setQuotaUser(quotaUser);
    }

    @Override
    public ListFriend setUserIp(java.lang.String userIp) {
      return (ListFriend) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.String cursor;

    /**

     */
    public java.lang.String getCursor() {
      return cursor;
    }

    public ListFriend setCursor(java.lang.String cursor) {
      this.cursor = cursor;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.Integer limit;

    /**

     */
    public java.lang.Integer getLimit() {
      return limit;
    }

    public ListFriend setLimit(java.lang.Integer limit) {
      this.limit = limit;
      return this;
    }

    @Override
    public ListFriend set(String parameterName, Object value) {
      return (ListFriend) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "removeFriend".
   *
   * This request holds the parameters needed by the the friendendpoint server.  After setting any
   * optional parameters, call the {@link RemoveFriend#execute()} method to invoke the remote
   * operation.
   *
   * @param id
   * @return the request
   */
  public RemoveFriend removeFriend(java.lang.String id) throws java.io.IOException {
    RemoveFriend result = new RemoveFriend(id);
    initialize(result);
    return result;
  }

  public class RemoveFriend extends FriendendpointRequest<Void> {

    private static final String REST_PATH = "friend/{id}";

    /**
     * Create a request for the method "removeFriend".
     *
     * This request holds the parameters needed by the the friendendpoint server.  After setting any
     * optional parameters, call the {@link RemoveFriend#execute()} method to invoke the remote
     * operation. <p> {@link
     * RemoveFriend#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param id
     * @since 1.13
     */
    protected RemoveFriend(java.lang.String id) {
      super(Friendendpoint.this, "DELETE", REST_PATH, null, Void.class);
      this.id = com.google.api.client.util.Preconditions.checkNotNull(id, "Required parameter id must be specified.");
    }

    @Override
    public RemoveFriend setAlt(java.lang.String alt) {
      return (RemoveFriend) super.setAlt(alt);
    }

    @Override
    public RemoveFriend setFields(java.lang.String fields) {
      return (RemoveFriend) super.setFields(fields);
    }

    @Override
    public RemoveFriend setKey(java.lang.String key) {
      return (RemoveFriend) super.setKey(key);
    }

    @Override
    public RemoveFriend setOauthToken(java.lang.String oauthToken) {
      return (RemoveFriend) super.setOauthToken(oauthToken);
    }

    @Override
    public RemoveFriend setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (RemoveFriend) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public RemoveFriend setQuotaUser(java.lang.String quotaUser) {
      return (RemoveFriend) super.setQuotaUser(quotaUser);
    }

    @Override
    public RemoveFriend setUserIp(java.lang.String userIp) {
      return (RemoveFriend) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.String id;

    /**

     */
    public java.lang.String getId() {
      return id;
    }

    public RemoveFriend setId(java.lang.String id) {
      this.id = id;
      return this;
    }

    @Override
    public RemoveFriend set(String parameterName, Object value) {
      return (RemoveFriend) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "updateFriend".
   *
   * This request holds the parameters needed by the the friendendpoint server.  After setting any
   * optional parameters, call the {@link UpdateFriend#execute()} method to invoke the remote
   * operation.
   *
   * @param content the {@link edu.vt.bmac.gpstracker.friendendpoint.model.Friend}
   * @return the request
   */
  public UpdateFriend updateFriend(edu.vt.bmac.gpstracker.friendendpoint.model.Friend content) throws java.io.IOException {
    UpdateFriend result = new UpdateFriend(content);
    initialize(result);
    return result;
  }

  public class UpdateFriend extends FriendendpointRequest<edu.vt.bmac.gpstracker.friendendpoint.model.Friend> {

    private static final String REST_PATH = "friend";

    /**
     * Create a request for the method "updateFriend".
     *
     * This request holds the parameters needed by the the friendendpoint server.  After setting any
     * optional parameters, call the {@link UpdateFriend#execute()} method to invoke the remote
     * operation. <p> {@link
     * UpdateFriend#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param content the {@link edu.vt.bmac.gpstracker.friendendpoint.model.Friend}
     * @since 1.13
     */
    protected UpdateFriend(edu.vt.bmac.gpstracker.friendendpoint.model.Friend content) {
      super(Friendendpoint.this, "PUT", REST_PATH, content, edu.vt.bmac.gpstracker.friendendpoint.model.Friend.class);
    }

    @Override
    public UpdateFriend setAlt(java.lang.String alt) {
      return (UpdateFriend) super.setAlt(alt);
    }

    @Override
    public UpdateFriend setFields(java.lang.String fields) {
      return (UpdateFriend) super.setFields(fields);
    }

    @Override
    public UpdateFriend setKey(java.lang.String key) {
      return (UpdateFriend) super.setKey(key);
    }

    @Override
    public UpdateFriend setOauthToken(java.lang.String oauthToken) {
      return (UpdateFriend) super.setOauthToken(oauthToken);
    }

    @Override
    public UpdateFriend setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (UpdateFriend) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public UpdateFriend setQuotaUser(java.lang.String quotaUser) {
      return (UpdateFriend) super.setQuotaUser(quotaUser);
    }

    @Override
    public UpdateFriend setUserIp(java.lang.String userIp) {
      return (UpdateFriend) super.setUserIp(userIp);
    }

    @Override
    public UpdateFriend set(String parameterName, Object value) {
      return (UpdateFriend) super.set(parameterName, value);
    }
  }

  /**
   * Builder for {@link Friendendpoint}.
   *
   * <p>
   * Implementation is not thread-safe.
   * </p>
   *
   * @since 1.3.0
   */
  public static final class Builder extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient.Builder {

    /**
     * Returns an instance of a new builder.
     *
     * @param transport HTTP transport, which should normally be:
     *        <ul>
     *        <li>Google App Engine:
     *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
     *        <li>Android: {@code newCompatibleTransport} from
     *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
     *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
     *        </li>
     *        </ul>
     * @param jsonFactory JSON factory, which may be:
     *        <ul>
     *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
     *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
     *        <li>Android Honeycomb or higher:
     *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
     *        </ul>
     * @param httpRequestInitializer HTTP request initializer or {@code null} for none
     * @since 1.7
     */
    public Builder(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
        com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      super(
          transport,
          jsonFactory,
          DEFAULT_ROOT_URL,
          DEFAULT_SERVICE_PATH,
          httpRequestInitializer,
          false);
    }

    /** Builds a new instance of {@link Friendendpoint}. */
    @Override
    public Friendendpoint build() {
      return new Friendendpoint(this);
    }

    @Override
    public Builder setRootUrl(String rootUrl) {
      return (Builder) super.setRootUrl(rootUrl);
    }

    @Override
    public Builder setServicePath(String servicePath) {
      return (Builder) super.setServicePath(servicePath);
    }

    @Override
    public Builder setHttpRequestInitializer(com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      return (Builder) super.setHttpRequestInitializer(httpRequestInitializer);
    }

    @Override
    public Builder setApplicationName(String applicationName) {
      return (Builder) super.setApplicationName(applicationName);
    }

    @Override
    public Builder setSuppressPatternChecks(boolean suppressPatternChecks) {
      return (Builder) super.setSuppressPatternChecks(suppressPatternChecks);
    }

    @Override
    public Builder setSuppressRequiredParameterChecks(boolean suppressRequiredParameterChecks) {
      return (Builder) super.setSuppressRequiredParameterChecks(suppressRequiredParameterChecks);
    }

    @Override
    public Builder setSuppressAllChecks(boolean suppressAllChecks) {
      return (Builder) super.setSuppressAllChecks(suppressAllChecks);
    }

    /**
     * Set the {@link FriendendpointRequestInitializer}.
     *
     * @since 1.12
     */
    public Builder setFriendendpointRequestInitializer(
        FriendendpointRequestInitializer friendendpointRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(friendendpointRequestInitializer);
    }

    @Override
    public Builder setGoogleClientRequestInitializer(
        com.google.api.client.googleapis.services.GoogleClientRequestInitializer googleClientRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(googleClientRequestInitializer);
    }
  }
}
